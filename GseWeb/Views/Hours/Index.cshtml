@using System.Globalization;
@using GseWeb.Models;
@model GseWeb.Models.Hours.HoursOfMonth

@{
    var CInfIT = CultureInfo.CreateSpecificCulture("it-IT");
    var MonthName = CInfIT.TextInfo.ToTitleCase(CInfIT.DateTimeFormat.GetMonthName(Model.Month));
    ViewBag.Title = string.Format("{0} - {1}", MonthName, Model.Year);
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="popup" style="overflow:hidden; width:auto; height:auto"></div>

<div class="col-xs-6">
    <h3>
        @if (!ViewBag.IsManager)
            {
            <span>
                <button class="btn btn-default selectmonth">
                    <span class="glyphicon glyphicon-calendar"></span>
                </button>
            </span>
        }
        <span class="visible-lg-inline visible-md-inline">@MonthName - @Model.Year</span>
        <span class="visible-sm-inline visible-xs-inline">@Model.Month / @Model.Year</span>
    </h3>
    <h4>@(Model.User.FirstName) @(Model.User.LastName)</h4>
</div>
<div class="col-xs-6">
    <table class="table table-condensed" style="font-size: 12px;">
        @foreach (var item in Model.Report)
        {
            <tr bgcolor="@ShareCode.WorkTypeColor(item.Id)" style="font-weight:bold">
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td style="text-align:right;">
                    @if (item.Value.GetType() == typeof(TimeSpan))
                    {
                        @ShareCode.HHmmString((TimeSpan)item.Value)
                    }
                    else
                    {
                        <span>@item.Value.ToString()</span>
                    }
                </td>
            </tr>
        }
    </table>
</div>
@if (TempData["Error"] != null)
{
    <p class="text-danger"><strong>Error:</strong> @TempData["Error"].ToString()</p>
}
<p>Monte Mensile: @ShareCode.HHmmString(Model.Amount)</p>
<table class="table gse-table-header table-condensed">
    <thead>
        <tr>
            <th>Data</th>
            <th>Presenza</th>
            <th>Ore Previste</th>
            <th>Ore Ord.</th>
            <th>Ore Straord.</th>
            <th>Ore Viaggio</th>
            <th>Trasferta</th>
            <th>Causale</th>
            <th>Note</th>
            <th>Commesse</th>
            <th>Perso</th>
            <th>Monte Lavoro</th>
            <th>Monte Festivo</th>
            <th>Ferie Permessi</th>
            <th>WorkTime</th>
            <th>Travel</th>
            <th>OrdersTimeComplete</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Hours)
        {
            //Colori righe
            var bgc = (item.WorkTypeRegular != GseWeb.Models.Hours.WorkType.Default) ? ShareCode.WorkTypeColor((int)item.WorkTypeRegular) : "";
            bgc = ShareCode.DayWeekColor((int)item.Date.DayOfWeek, item.IsFestivity, bgc);
            <tr bgcolor="@bgc">
                <td nowrap>
                    @ShareCode.DayWeekIT(item.Date)
                    @item.Date.Day
                </td>
                @if (item.WorkTypeRegular != GseWeb.Models.Hours.WorkType.Default)
                {
                    <td>
                        <input type="button" class="btn btn-default btn-xs" value="Modifica" onclick="getPopup('@Url.Action("GetDay", "Hours" , new { year = item.Date.Year, month = item.Date.Month, day = item.Date.Day}, null)')" />
                    </td>
                    <td>
                        @ShareCode.boolImg(item.Presence)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.OrdinaryRegular)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.WorkTimeOrdinary)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.ExtraRegular)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.OrdersTimeTravel)
                    </td>
                    <td>
                        @ShareCode.boolImg(item.OffSite)
                    </td>
                    <td>
                        @item.WorkTypeRegular.Description()
                    </td>
                    <td>
                        @item.Note
                    </td>
                    <td nowrap style="font-size:9px">
                        <ul style="margin: 0; padding:0; list-style-type: none;">
                            @foreach (var o in item.WorkOrders)
                            {
                                <li style="padding: 0;">@ShareCode.boolOKNOK(o.Approved) @o.OrderId</li>
                            }
                        </ul>
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.LessTime)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.AmountWorking)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.AmountFestivity)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.HolidayTime)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.WorkTime)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.Travel)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.OrdersTimeComplete)
                    </td>
                }
                else
                {
                    <td>
                        <input type="button" class="btn btn-default btn-xs" value="Aggiungi" onclick="getPopup('@Url.Action("GetDay", "Hours" , new { year = item.Date.Year, month = item.Date.Month, day = item.Date.Day}, null)')" />
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                }

            </tr>
        }
    </tbody>
</table>

@*Gestione DatePicker*@
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script>
    $('.selectmonth').datepicker({
        startView: 1,
        minViewMode: 1,
        language: "it",
        keyboardNavigation: false,
        autoclose: true,
    });

    $('.selectmonth').datepicker().on('changeDate', function (e) {
        var year = e.date.getFullYear();
        var month = e.date.getMonth() + 1;
        window.location = '/UserWork/ReportMonth?year=' + year + '&month=' + month;
    });
</script>

@*Pupup*@
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script>
    $(function () {
        $("#popup").dialog({
            autoOpen: false,
            title: 'Title',
            width: 'auto',
            height: 'auto',
            modal: true,
            draggable: false,
            resizable: false,
        });
    });

    function getPopup(Url) {
        $.get(Url)
        .success(function (data) {
            $('#popup').html(data);
            $('#popup').dialog('open');
            // Posizione popup
            if ($('#popup').closest('.ui-dialog').offset().top < 80) {
                $('#popup').closest('.ui-dialog').css({ 'top': '80px' });
            }
        });
    }

    function closePopup() {
        $('#popup').dialog('close');
        location.reload();
        //window.location = '@Url.Action("Index", "Hours", new { year = Model.Year, month = Model.Month })'
    }
</script>
