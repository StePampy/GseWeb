@using System.Globalization;
@model GseWeb.Models.Report.MonthReport

@{
    var CInfIT = CultureInfo.CreateSpecificCulture("it-IT");
    var MonthName = CInfIT.TextInfo.ToTitleCase(CInfIT.DateTimeFormat.GetMonthName((int)Model.Month));

    ViewBag.Title = string.Format("{0} - {1}", MonthName, Model.Year);
    Layout = "~/Views/Shared/_Layout.cshtml";
    GseWeb.Models.Report.Day dateReport = null;
    //GseWeb.Models.MonthTotal monthTotal = null;
}
@if (ViewBag.IsManager)
{
    @Html.ActionLink("Indietro", "ReportUsers", "Report", new { year = Model.Year, month = Model.Month }, null)
}
<div>
    <div class="col-xs-6 visible-lg visible-md">
        <h3>
            @if (!ViewBag.IsManager)
            {
                <span>
                    <button class="btn btn-default selectmonth">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </button>
                </span>
            }
            <span>@(ViewBag.Title)</span>
        </h3>
        <h4>@(Model.UserFirstName) @(Model.UserLastName)</h4>
    </div>

    <div class="col-xs-6 visible-sm visible-xs">
        <h3>
            @if (!ViewBag.IsManager)
            {
                <span>
                    <button class="btn btn-default selectmonth">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </button>
                </span>
            }
            <span>@(string.Format("{0}/{1}", Model.Month, Model.Year))</span>
        </h3>
        <h4>@(Model.UserFirstName) @(Model.UserLastName)</h4>
    </div>

    <div class="col-xs-6">
        <table class="table table-condensed" style="font-size: 12px;">
            @foreach (var item in Model.Totals)
            {
                <tr bgcolor="@ShareCode.WorkTypeColor(item.WorkTypeId)" style="font-weight:bold">
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.Value)
                    </td>
                </tr>
            }
        </table>
    </div>
</div>

@if (TempData["ErrorHours"] != null)
{
        <p class="text-danger"><strong>Error:</strong> @TempData["ErrorHours"].ToString()</p>
}

<table class="table table-condensed">
    <thead>
        <tr bgcolor="#376092" style="color: white;">
            @if (!ViewBag.IsManager)
            {
                <th></th>
            }
            <th colspan="2">
                @Html.DisplayNameFor(model => dateReport.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => dateReport.Hour.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => dateReport.Hour.End)
            </th>
            <th>
                @Html.DisplayNameFor(model => dateReport.Hour.Break)
            </th>
            <th>
                @Html.DisplayNameFor(model => dateReport.Hour.WorkTime)
            </th>
            <th>
                Extra
            </th>
            <th>
                @Html.DisplayNameFor(model => dateReport.Hour.Travel)
            </th>
            <th>
                @Html.DisplayNameFor(model => dateReport.Hour.OffSite)
            </th>
            <th>
                @Html.DisplayNameFor(model => dateReport.Hour.WorkType.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => dateReport.Hour.Note)
            </th>
            @if (!ViewBag.IsManager)
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Dates)
        {
            //Colori
            var bgc = "";
            if (item.Hour != null)
            {
                bgc = ShareCode.WorkTypeColor(item.Hour.WorkTypeId);
            }
            bgc = ShareCode.DayWeekColor((int)item.Date.DayOfWeek, item.Festivity, bgc);

            <tr bgcolor="@(bgc)" style="font-size: 12px;">
                @if (item.Hour != null)
                {
                    if (!ViewBag.IsManager)
                    {
                        // Classe per ore disponibili delle commesse
                        var HoursApproved = item.OrderVM.Orders.All(x => x.UserApprove != null || x.UserId == x.Order.TeamLeaderId);

                        var clbtEdit = (item.OrderVM.AvaiableHours > new TimeSpan(0, 0, 0))
                                ? "btn-danger"
                                : (HoursApproved) ? "btn-success" : "";

                        var txbtEdit = (item.OrderVM.AvaiableHours > new TimeSpan(0, 0, 0))
                               ? "Ore commesse da sistemare"
                               : (HoursApproved) ? "Ore Approvate" : ""; ;

                        <td>
                            @Html.ActionLink("Modifica", "Edit", "Hours", new { DateTicks = item.Date.Date.Ticks, UserId = Model.UserId, returnUrl = ViewBag.ReturnUrl }, new { @class = "btn btn-default btn-xs " + clbtEdit, @title = txbtEdit })
                        </td>
                    }
                    <td>
                        @ShareCode.ddMMString(item.Date)
                    </td>
                    <td>
                        @ShareCode.DayWeekIT(item.Date)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.Hour.Start)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.Hour.End)
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.Hour.Break)
                    </td>
                    <td style="font-weight:bold">
                        @ShareCode.HHmmString(item.Hour.WorkTime)
                    </td>
                    <td>
                        @if (item.Hour.WorkTypeId == 2)
                    {
                            @ShareCode.HHmmString(item.Hour.DiffTime)
                        }
                    </td>
                    <td>
                        @ShareCode.HHmmString(item.Hour.Travel)
                    </td>
                    <td>
                        @ShareCode.boolImg(item.Hour.OffSite)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Hour.WorkType.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Hour.Note)
                    </td>
                    if (!ViewBag.IsManager)
                    {
                        <td nowrap>
                            @Html.ActionLink("Elimina", "Delete", "Hours", new { DateTicks = item.Date.Date.Ticks, UserId = Model.UserId, returnUrl = ViewBag.ReturnUrl }, new { @class = "btn btn-default btn-xs" })
                        </td>
                    }
                }
                else
                {
                    if (!ViewBag.IsManager)
                    {
                        <td>
                            @Html.ActionLink("Aggiungi", "Create", "Hours", new { DateTicks = item.Date.Date.Ticks, UserId = Model.UserId, returnUrl = ViewBag.ReturnUrl }, new { @class = "btn btn-default btn-xs" })
                        </td>
                    }
                    <td>
                        @ShareCode.ddMMString(item.Date)
                    </td>
                    <td>
                        @ShareCode.DayWeekIT(item.Date)
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    if (!ViewBag.IsManager)
                    {
                        <td></td>
                    }
                }
            </tr>
        }
    </tbody>
</table>

@*Gestione DatePicker*@
<script src="~/Scripts/bootstrap-datepicker.min.js"></script>
<script>
    $('.selectmonth').datepicker({
        startView: 1,
        minViewMode: 1,
        language: "it",
        keyboardNavigation: false,
        autoclose: true,
    });

    $('.selectmonth').datepicker().on('changeDate', function (e) {
        var year = e.date.getFullYear();
        var month = e.date.getMonth() + 1;
        window.location = '/Report/ReportMonth?year=' + year + '&month=' + month;
    });
</script>


